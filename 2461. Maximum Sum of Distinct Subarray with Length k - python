class Solution:
    def maximumSubarraySum(self, nums: List[int], k: int) -> int:
        maxSum = 0
        curSum = 0
        numsD = {}
        for i in range(0, k):
            if nums[i] not in numsD.keys():
                numsD[nums[i]] = 1
            else:
                numsD[nums[i]] += 1
            curSum += nums[i]
        if len(numsD) == k:
            maxSum = curSum
        for i in range(k, len(nums)):
            curSum = curSum - nums[i-k] + nums[i]
            if nums[i] not in numsD.keys():
                numsD[nums[i]] = 1
            else:
                numsD[nums[i]] += 1
            if (numsD[nums[i-k]] - 1) == 0:
                numsD.pop(nums[i-k]) 
            else: 
                numsD[nums[i-k]] -= 1
            if len(numsD) == k and curSum > maxSum:
                maxSum = curSum
        return maxSum
