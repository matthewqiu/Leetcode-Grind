/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> ans = new ArrayList<>();
        String s = "";
        traverse(root, ans, s);
        return ans;
    }
    
    public void traverse(TreeNode root, List<String> list, String s)
    {
        if(root != null)
        {
            s += Integer.toString(root.val);
            if(root.left == null && root.right == null)
                list.add(s);
            else
            {
                s += "->";
                traverse(root.left, list, s);
                traverse(root.right, list, s);
            }
        }
        
    }
}
